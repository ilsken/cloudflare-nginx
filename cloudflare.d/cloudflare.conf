# vim: set ft=nginx ts=2 sw=2 sts=2 et :

# Returns 1 if $remote_addr is a cloudflare ip
# Don't use any of these variables if you are using realip to set remote_addr from cloudflare
# These variables will all be inaccurate

geo $is_cloudflare_ip {
  default 0;
  include cloudflare.d/geo-ipv4.conf;
  include cloudflare.d/geo-ipv6.conf;
}

# only works in nginx >= 1.9.7
# Returns $realip_remote_addr if set, otherwise $remote_addr
map $realip_remote_addr $cloudflare_realip_original_remote_addr {
  "" $remote_addr;
  default $realip_remote_addr;
}

# Same as is_cloudflare_ip but uses the original ip if realip is enabled
geo $is_cloudflare_realip $cloudflare_realip_original_remote_addr {
   default 0;
  include cloudflare.d/geo-ipv4.conf;
  include cloudflare.d/geo-ipv6.conf;
}


# Returns the value of CF-Connecting IP if we are behind cloudflare
# Otherwise returns an empty string
map $is_cloudflare_ip $cloudflare_connecting_ip  {
  default "";
  1 $http_cf_connecting_ip;
}

# Returns CF-Connecting-IP if we're behind cloudflare, otherwise it returns $remote_addr
map $cloudflare_connecting_ip $cloudflare_remote_addr {
  "" $remote_addr;
  default $cloudflare_connecting_ip;
}


# Returns X-Forwarded-For-Proto if we're behind cloudflare
# Otherwise returns $scheme
map $is_cloudflare_ip $cloudflare_scheme {
  1 $http_x_forwarded_proto;
  default $scheme;
}
# Returns the country the user is from via CF-IPCountry if we are behind cloudflare
# Otherwise, returns blank
# If you're using GeoIP, you should modify this to use that as a fallback
map $is_cloudflare_ip $cloudflare_country {
  1 $http_cf_ipcountry;
  default "";
}

# Cloudflare logging format
log_format cloudflare '$cloudflare_remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" "$http_cf_ray"';
